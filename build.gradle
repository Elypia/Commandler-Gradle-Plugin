plugins {
    id "maven"
    id "jacoco"
    id "java-gradle-plugin"
    id 'com.gradle.plugin-publish' version '0.10.1'
}

group = "org.elypia.commandler"
version = "1.2.0"
description = "Commandler is a abstract command handling framework for dispatching events."
sourceCompatibility = 11
targetCompatibility = 11

ext {
    commandlerVersion = "4.0.0"
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    // Commandler
    implementation "org.elypia.commandler:core:${commandlerVersion}"
    implementation "org.elypia.commandler:doc:${commandlerVersion}"

    // Logging
    implementation "org.slf4j:slf4j-api:1.7.29"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.2"
    testImplementation "org.mockito:mockito-core:3.2.0"
}

/** Testing */

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    reports {
        html.enabled = false
    }
}

/** Code Coverage */

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

/** Gradle Plugin */
gradlePlugin {
    plugins {
        commandler {
            id = 'org.elypia.commandler'
            displayName = 'Commandler Gradle Plugin'
            description = 'Perform pre/post compilation steps with Commandler as build steps rather than in runtime.'
            implementationClass = 'org.elypia.commandler.CommandlerPlugin'
        }
    }
}

/** Publish Gradle Plugin */
pluginBundle {
    website = 'https://elypia.org/'
    vcsUrl = 'https://gitlab.com/Elypia/commandler-gradle-plugin'
    tags = ['commandler', 'gradle', 'java']
}
